// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id          String       @id @default(uuid())
  title       String
  slug        String       @unique
  image       String
  owners      String?
  active      Boolean      @default(false)
  addressId   String       @unique
  address     Address      @relation(fields: [addressId], references: [id])
  category    Category[]
  link        Link[]
  products    Product[]
  sponsorings Sponsoring[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Product {
  id         String       @id @default(uuid())
  title      String
  slug       String
  stores     Store[]
  categoryId String
  category   Category     @relation(fields: [categoryId], references: [id])
  sponsoring Sponsoring[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Link {
  id          String   @id @default(uuid())
  type        Int
  customTitle String?
  url         String
  storeId     String
  store       Store    @relation(fields: [storeId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Address {
  id            String   @id @default(uuid())
  street        String?
  number        String?
  neighbourhood String?
  extra         String?
  store         Store?
  cityId        String
  city          City     @relation(fields: [cityId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model City {
  id        String    @id @default(uuid())
  title     String
  slug      String
  addresses Address[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Token     Token[]
}

model Category {
  id          String       @id @default(uuid())
  title       String
  slug        String
  stores      Store[]
  products    Product[]
  sponsorings Sponsoring[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Sponsoring {
  id         String     @id @default(uuid())
  storeId    String
  store      Store      @relation(fields: [storeId], references: [id])
  categories Category[]
  products   Product[]
  start      DateTime
  end        DateTime
  active     Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Token {
  id        String    @id @default(uuid())
  active    Boolean   @default(false)
  start     DateTime?
  end       DateTime?
  cityId    String?
  city      City?     @relation(fields: [cityId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
